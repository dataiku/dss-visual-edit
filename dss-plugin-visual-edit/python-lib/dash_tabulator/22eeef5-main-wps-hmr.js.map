{"version":3,"sources":["webpack:///./src/lib/components/DashTabulator.react.js"],"names":["crypto","require","plugin_version","md5","string","createHash","update","digest","DashTabulator","_React$Component","props","_this","_classCallCheck","_callSuper","_defineProperty","React","createRef","ref","_inherits","_createClass","key","value","componentDidMount","_this2","_this$props","id","datasetName","data","columns","groupBy","cellEdited","i","length","header","o","Object","resolveProp","variable","arrow","key2","o2","tabulator","Tabulator","el","on","cell","edited","field","getField","type","getColumn","getDefinition","initialValue","getInitialValue","oldValue","getOldValue","getValue","row","getData","setProps","window","parent","WT1SVC","event","e","addEventListener","filters","filter","filterType","filterColumn","column","filterMinValue","minValue","filterMaxValue","maxValue","console","log","setFilter","render","_this3","map","item","item_hashed","assign","createElement","Component","defaultProps","propTypes","PropTypes","array","func","object"],"mappings":"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","file":"22eeef5-main-wps-hmr.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { resolveProp } from 'dash-extensions';\nimport { TabulatorFull as Tabulator } from \"tabulator-tables\"; //import Tabulator library\nimport \"tabulator-tables/dist/css/tabulator.min.css\";\nimport \"tabulator-tables/dist/css/tabulator_semanticui.min.css\";\nimport \"../../../assets/custom_tabulator.js\";\nimport \"../../../assets/tabulator_dataiku.css\";\nimport \"../../../assets/jquery-3.5.1.min.js\";\nimport \"../../../assets/luxon.min.js\";\nimport \"../../../assets/semantic-ui-react.min.js\";\nimport \"../../../assets/semantic.min.css\";\n\nconst crypto = require('crypto');\n\nconst plugin_version = \"2.0.2\";\n\nfunction md5(string) {\n    return crypto.createHash('md5').update(string).digest('hex');\n}\n\nexport default class DashTabulator extends React.Component {\n    el = React.createRef();\n    tabulator = null; //variable to hold your table\n\n    componentDidMount() {\n        // Instantiate Tabulator when element is mounted\n\n        const { id, datasetName, data, columns, groupBy, cellEdited } = this.props;\n\n        // Interpret column formatters as function handles.\n        for (let i = 0; i < columns.length; i++) {\n            let header = columns[i];\n            for (let key in header) {\n                let o = header[key];\n                if (o instanceof Object) {\n                    header[key] = resolveProp(o, this);\n                    if (!o.variable && !o.arrow) {\n                        for (let key2 in o) {\n                            let o2 = o[key2]\n                            if (o2 instanceof Object) {\n                                o[key2] = resolveProp(o2, this);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.tabulator = new Tabulator(this.el, {\n            \"data\": data,\n            \"datasetName\": datasetName,\n            \"reactiveData\": true,\n            \"columns\": columns,\n            \"groupBy\": groupBy,\n            \"selectable\": 1,\n            \"layout\": \"fitDataTable\",\n            \"pagination\": \"local\",\n            \"paginationSize\": 20,\n            \"paginationSizeSelector\": [10, 20, 50, 100],\n            \"movableColumns\": true,\n            \"persistence\": true,\n            \"footerElement\": \"<button class='tabulator-page' onclick='localStorage.clear(); window.location.reload();'>Reset View</button>\"\n        });\n\n        this.tabulator.on(\"cellEdited\", (cell) => {\n            var edited = new Object()\n            edited.field = cell.getField()\n            edited.type = cell.getColumn().getDefinition()[\"editor\"]\n            edited.initialValue = cell.getInitialValue()\n            edited.oldValue = cell.getOldValue()\n            edited.value = cell.getValue()\n            edited.row = cell.getData()\n            this.props.setProps({ cellEdited: edited })\n            try {\n                window.parent.WT1SVC.event(\"visualedit-edit-cell\", {\n                    \"dataset_name_hash\": md5(datasetName),\n                    \"column_name_hash\": md5(edited.field),\n                    \"column_type\": edited.type,\n                    \"plugin_version\": plugin_version\n                });\n            } catch (e) { }\n        })\n\n        window.addEventListener('message', function (event) {\n            const data = event.data;\n            if (data && data.type === 'filters' && data.filters.length > 0) {\n                filter = data.filters[0];\n                filterType = filter.filterType;\n                filterColumn = filter.column;\n                if (filterType === 'NUMERICAL_FACET') {\n                    filterMinValue = filter.minValue;\n                    filterMaxValue = filter.maxValue;\n                    console.log(filterMinValue + \" <= \" + filterColumn);\n                    this.tabulator.setFilter(filterColumn, \">=\", filterMinValue);\n                }\n            }\n        });\n    }\n\n    constructor(props) {\n        super(props);\n        this.ref = null;\n    }\n\n    render() {\n        try {\n            window.parent.WT1SVC.event(\"visualedit-display-table\", {\n                \"dataset_name_hash\": md5(this.props.datasetName),\n                // create columns_hashed as a copy of the columns array where each item's \"field\" property has been hashed and other properties have been kept as they were\n                \"rows_count\": this.props.data.length,\n                \"columns_hashed\": this.props.columns.map((item) => {\n                    let item_hashed = Object.assign({}, item);\n                    item_hashed[\"field\"] = md5(item[\"field\"]);\n                    item_hashed[\"title\"] = md5(item[\"title\"]);\n                    return item_hashed;\n                }),\n                \"plugin_version\": plugin_version\n            })\n        }\n        catch (e) { }\n\n        // const {id, data, columns, groupBy, cellEdited} = this.props;\n        // if (this.tabulator) this.tabulator.setData(data)\n\n        return (\n            <div ref={el => (this.el = el)} />\n        )\n    }\n}\n\nDashTabulator.defaultProps = {\n    data: [],\n    datasetName: \"\",\n    columns: [],\n    groupBy: []\n};\n\nDashTabulator.propTypes = {\n    /**\n     * ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * Data to display in the table.\n     */\n    data: PropTypes.array,\n\n    /**\n     * Column definitions.\n     */\n    columns: PropTypes.array,\n\n    /**\n     * Name of the corresponding Dataiku dataset.\n     */\n    datasetName: PropTypes.string,\n\n    /**\n     * Columns to group by.\n     */\n    groupBy: PropTypes.array,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func,\n\n    /**\n     * cellEdited captures the cell that was clicked on\n     */\n    cellEdited: PropTypes.object,\n};\n"],"sourceRoot":""}